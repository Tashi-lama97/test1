{"version":3,"sources":["components/CircleProgressWithLabel.js","components/Home.js","cache/index.js","components/Auth.js","routes/PrivateRoute.js","App.js","reportWebVitals.js","index.js"],"names":["CircularProgressWithLabel","props","sx","position","display","CircularProgress","variant","top","left","bottom","right","alignItems","justifyContent","Typography","component","color","Math","round","value","Home","baseUrl","username","useParams","useState","questionCount","setQuestionCount","ansCount","setAnsCount","banLoading","setBanLoading","banSuccess","setBanSuccess","ipBanLoading","setIpBanLoading","ipBanSuccess","setIpBanSuccess","quesLoading","setQuesLoading","quesSuccess","setQuesSuccess","ansLoading","setAnsLoading","ansSuccess","setAnsSuccess","deleteActionLoading","setDeleteActionLoading","deleteActionSuccess","setDeleteActionSuccess","isDisable","setIsDisable","isDisableUserAction","setIsDisableUserAction","qProgress","setQprogress","aProgress","setAprogress","totalQ","setTotalQ","totalA","setTotalA","errors","setErrors","token","process","unPublishAnswers","a","trim","window","alert","Axios","get","respo","ans","data","length","i","delete","_id","per","console","log","unPublishQuestion","arr","resp","banIpAddress","isBanIP","patch","success","banUser","put","isPermanentBan","deleteUserActions","style","height","Box","mx","pt","width","borderRadius","textAlign","Stack","spacing","direction","Grid","container","item","xs","ListItem","ml","size","green","Badge","badgeContent","Button","onClick","disabled","Alert","severity","AlertTitle","accessPinCache","set","this","Auth","history","useHistory","accessPin","setAccessPin","error","setError","TextField","label","onChange","e","target","hashDigest","sha256","Base64","stringify","hmacSHA512","push","PrivateRoute","Component","rest","render","isAutheticated","to","pathname","state","from","location","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96e7d9e4.chunk.js","sourcesContent":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\n\nconst CircularProgressWithLabel = (props) => {\n  return (\n    <Box sx={{ position: \"relative\", display: \"inline-flex\" }}>\n      <CircularProgress variant=\"determinate\" {...props} />\n      <Box\n        sx={{\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          position: \"absolute\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Typography variant=\"caption\" component=\"div\" color=\"text.secondary\">\n          {`${Math.round(props.value)}%`}\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nCircularProgressWithLabel.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n\nexport default CircularProgressWithLabel;\n","import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport { useParams } from \"react-router\";\nimport Alert from \"@mui/material/Alert\";\nimport AlertTitle from \"@mui/material/AlertTitle\";\nimport { Box } from \"@mui/system\";\nimport {\n  Badge,\n  Button,\n  CircularProgress,\n  Grid,\n  ListItem,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport { green } from \"@mui/material/colors\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport CircularProgressWithLabel from \"./CircleProgressWithLabel\";\n\nconst Home = () => {\n  const { username } = useParams();\n  const [questionCount, setQuestionCount] = useState(0);\n  const [ansCount, setAnsCount] = useState(0);\n  const [banLoading, setBanLoading] = useState(false);\n  const [banSuccess, setBanSuccess] = useState(false);\n  const [ipBanLoading, setIpBanLoading] = useState(false);\n  const [ipBanSuccess, setIpBanSuccess] = useState(false);\n  const [quesLoading, setQuesLoading] = useState(false);\n  const [quesSuccess, setQuesSuccess] = useState(false);\n  const [ansLoading, setAnsLoading] = useState(false);\n  const [ansSuccess, setAnsSuccess] = useState(false);\n  const [deleteActionLoading, setDeleteActionLoading] = useState(false);\n  const [deleteActionSuccess, setDeleteActionSuccess] = useState(false);\n  const [isDisable, setIsDisable] = useState(false);\n  const [isDisableUserAction, setIsDisableUserAction] = useState(false);\n  const [qProgress, setQprogress] = useState(0);\n  const [aProgress, setAprogress] = useState(0);\n  const [totalQ, setTotalQ] = useState(0);\n  const [totalA, setTotalA] = useState(0);\n\n  const [errors, setErrors] = useState(\"\");\n\n  const token = process.env.REACT_APP_TOKEN;\n  let baseUrl;\n  if (process.env.REACT_APP_STAGE === \"PROD\") {\n    baseUrl = process.env.REACT_APP_BASE_URL;\n  } else {\n    baseUrl = \"http://localhost:3002\";\n  }\n\n  const unPublishAnswers = async () => {\n    if (username.trim() === \"\") {\n      window.alert(\"Please provide the username\");\n      return;\n    }\n    try {\n      setAnsLoading(true);\n      const respo = await Axios.get(\n        `${baseUrl}/adminApp/getAnswers?token=${token}&answeredBy=${username}&limit=1000`\n      );\n\n      let ans = respo.data.data;\n      if (ans.length <= 0) {\n        setAnsLoading(false);\n        setAnsSuccess(true);\n        return;\n      }\n      let i = 0;\n      setTotalA(ans.length);\n      for (let a of ans) {\n        try {\n          await Axios.delete(\n            `${baseUrl}/adminApp/unpublishAnswer/${a._id}/unpublished?token=${token}`\n          );\n          i++;\n\n          setAnsCount(i);\n          let per = (i / ans.length) * 100;\n          setAprogress(per);\n          //   console.log(\"Answers Success\");\n          if (i === ans.length) {\n            setAnsLoading(false);\n            setAnsSuccess(true);\n            return;\n          }\n        } catch (error) {\n          setAnsLoading(false);\n          setErrors(error);\n          console.log(error);\n        }\n      }\n    } catch (error) {\n      setAnsLoading(false);\n      setErrors(error);\n      console.log(error);\n    }\n  };\n\n  const unPublishQuestion = async () => {\n    if (username.trim() === \"\") {\n      window.alert(\"Please provide the username\");\n      return;\n    }\n    try {\n      setQuesLoading(true);\n      let arr = await Axios.get(\n        `${baseUrl}/adminApp/getQuestions?token=${token}&username=${username}&limit=1000`\n      );\n      let resp = arr.data.data;\n\n      if (resp.length <= 0) {\n        setQuesLoading(false);\n        setQuesSuccess(true);\n        unPublishAnswers();\n        return;\n      }\n      let i = 0;\n      setTotalQ(resp.length);\n      for (let a of resp) {\n        try {\n          await Axios.delete(\n            `${baseUrl}/adminApp/unpublishQuestion/${a._id}/unpublished?token=${token}`\n          );\n          i++;\n          setQuestionCount(i);\n          let per = (i / resp.length) * 100;\n          console.log(\"PER\", per);\n          setQprogress(per);\n          // console.log(\"Question Success\");\n          if (i === resp.length) {\n            setQuesLoading(false);\n            setQuesSuccess(true);\n            unPublishAnswers();\n            return;\n          }\n        } catch (error) {\n          setQuesLoading(false);\n          setErrors(error);\n          console.log(error);\n        }\n      }\n    } catch (error) {\n      setQuesLoading(false);\n      setErrors(error);\n      console.log(error);\n    }\n  };\n\n  const banIpAddress = async (isBanIP = false) => {\n    try {\n      if (username.trim() === \"\") {\n        window.alert(\"Please provide the username\");\n        return;\n      }\n      setIpBanLoading(true);\n      const response = await Axios.patch(\n        `${baseUrl}/adminApp/banIpAddress?token=${token}&username=${username}`\n      );\n      if (response.data.success === true) {\n        setIpBanLoading(false);\n        setIpBanSuccess(true);\n        if (!isBanIP) unPublishQuestion();\n      }\n    } catch (error) {\n      setIpBanLoading(false);\n      setErrors(error);\n      console.log(error);\n    }\n  };\n\n  const banUser = async () => {\n    try {\n      setIsDisable(true);\n      if (username.trim() === \"\") {\n        window.alert(\"Please provide the username\");\n        return;\n      }\n      setBanLoading(true);\n      const response = await Axios.put(\n        `${baseUrl}/adminApp/banUser?token=${token}`,\n        {\n          username: username,\n          isPermanentBan: true,\n        }\n      );\n      if (response.data.success === true) {\n        setBanLoading(false);\n        setBanSuccess(true);\n        banIpAddress();\n      } else {\n        setBanLoading(false);\n      }\n    } catch (error) {\n      setBanLoading(false);\n      setErrors(error);\n      console.log(error);\n    }\n  };\n\n  const deleteUserActions = async () => {\n    try {\n      setIsDisableUserAction(true);\n      if (username.trim() === \"\") {\n        window.alert(\"Please provide the username\");\n        return;\n      }\n      setDeleteActionLoading(true);\n      const response = await Axios.delete(\n        `${baseUrl}/adminApp/deleteUserActionAndAnswer?token=${token}&username=${username}`\n      );\n      if (response.data.success === true) {\n        setDeleteActionLoading(false);\n        setDeleteActionSuccess(true);\n      } else {\n        setDeleteActionLoading(false);\n      }\n    } catch (error) {\n      setDeleteActionLoading(false);\n      setErrors(error);\n      console.log(error);\n    }\n  };\n\n  return (\n    <div style={{ height: \"100vh\" }}>\n      <Box\n        sx={{\n          mx: \"auto\",\n          pt: 20,\n          width: \"90vw\",\n          height: \"90vh\",\n          borderRadius: 1,\n          textAlign: \"center\",\n        }}\n      >\n        <Stack spacing={2} direction=\"column\">\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <ListItem>\n                Total Questions\n                <Typography color=\"primary\" ml={3}>\n                  {totalQ}\n                </Typography>\n              </ListItem>\n            </Grid>\n            <Grid item xs={6}>\n              <ListItem>\n                Total Answers\n                <Typography color=\"primary\" ml={3}>\n                  {totalA}\n                </Typography>\n              </ListItem>\n            </Grid>\n            <Grid item xs={6}>\n              <ListItem>Banning User</ListItem>\n            </Grid>\n            <Grid item xs={6}>\n              <ListItem>\n                {banLoading ? (\n                  <CircularProgress size={20} />\n                ) : banSuccess ? (\n                  <CheckCircleIcon sx={{ color: green[500] }} />\n                ) : null}\n              </ListItem>\n            </Grid>\n            <Grid item xs={6}>\n              <ListItem>Banning IP</ListItem>\n            </Grid>\n            <Grid item xs={6}>\n              <ListItem>\n                {ipBanLoading ? (\n                  <CircularProgress size={20} />\n                ) : ipBanSuccess ? (\n                  <CheckCircleIcon sx={{ color: green[500] }} />\n                ) : null}\n              </ListItem>\n            </Grid>\n            <Grid item xs={6}>\n              <ListItem>\n                <Badge color=\"secondary\" badgeContent={questionCount}>\n                  Questions\n                </Badge>\n              </ListItem>\n            </Grid>\n            <Grid item xs={6}>\n              <ListItem>\n                {quesLoading ? (\n                  <CircularProgressWithLabel size={30} value={qProgress} />\n                ) : quesSuccess ? (\n                  <CheckCircleIcon sx={{ color: green[500] }} />\n                ) : null}\n              </ListItem>\n            </Grid>\n            <Grid item xs={6}>\n              <ListItem>\n                <Badge color=\"secondary\" badgeContent={ansCount}>\n                  Answers\n                </Badge>\n              </ListItem>\n            </Grid>\n            <Grid item xs={6}>\n              <ListItem>\n                {ansLoading ? (\n                  <CircularProgressWithLabel size={30} value={aProgress} />\n                ) : ansSuccess ? (\n                  <CheckCircleIcon sx={{ color: green[500] }} />\n                ) : null}\n              </ListItem>\n            </Grid>\n            <Grid item xs={6}>\n              <ListItem>User Action Delete</ListItem>\n            </Grid>\n            <Grid item xs={6}>\n              <ListItem>\n                {deleteActionLoading ? (\n                  <CircularProgress size={20} />\n                ) : deleteActionSuccess ? (\n                  <CheckCircleIcon sx={{ color: green[500] }} />\n                ) : null}\n              </ListItem>\n            </Grid>\n          </Grid>\n\n          <Button variant=\"contained\" onClick={banUser} disabled={isDisable}>\n            Take Action\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={() => {\n              banIpAddress(true);\n            }}\n          >\n            Ban IP Only\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={deleteUserActions}\n            disabled={isDisableUserAction}\n          >\n            Delete User Actions\n          </Button>\n          {errors ? (\n            <Alert severity=\"error\">\n              <AlertTitle>Error</AlertTitle>\n              This is an error alert — <strong>{errors}</strong>\n            </Alert>\n          ) : null}\n        </Stack>\n      </Box>\n    </div>\n  );\n};\n\nexport default Home;\n","export const accessPinCache = {\n  token: \"\",\n  set: function (token) {\n    this.token = token;\n  },\n  get: function () {\n    return this.token;\n  },\n};\n","import React, { useState } from \"react\";\nimport sha256 from \"crypto-js/sha256\";\nimport hmacSHA512 from \"crypto-js/hmac-sha512\";\nimport Base64 from \"crypto-js/enc-base64\";\nimport { useHistory, useParams } from \"react-router\";\nimport {\n  Box,\n  TextField,\n  Button,\n  Stack,\n  Alert,\n  AlertTitle,\n} from \"@mui/material\";\nimport { accessPinCache } from \"../cache\";\n\nconst Auth = () => {\n  const history = useHistory();\n  const { username } = useParams();\n  const [accessPin, setAccessPin] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const authenticate = () => {\n    setError(\"\");\n    const hashDigest = sha256(accessPin);\n    const hmacDigest = Base64.stringify(\n      hmacSHA512(hashDigest, process.env.REACT_APP_PRIVATE_KEY)\n    );\n    if (process.env.REACT_APP_AUTH_TOKEN === hmacDigest) {\n      accessPinCache.set(accessPin);\n      history.push(`/action/${username}`);\n      return;\n    } else {\n      setError(\"Access Token is invalid\");\n      return;\n    }\n  };\n\n  return (\n    <div style={{ height: \"100vh\" }}>\n      <Box\n        sx={{\n          mx: \"auto\",\n          pt: 20,\n          width: \"90vw\",\n          height: \"90vh\",\n          borderRadius: 1,\n          textAlign: \"center\",\n        }}\n      >\n        <Stack spacing={2} direction=\"column\">\n          <TextField\n            label=\"Access Token\"\n            color=\"secondary\"\n            value={accessPin}\n            onChange={(e) => setAccessPin(e.target.value)}\n          />\n          <Button variant=\"contained\" onClick={authenticate}>\n            Authenticate\n          </Button>\n          {error ? (\n            <Alert severity=\"error\">\n              <AlertTitle>Error</AlertTitle>\n              There is an error — <strong>{error}</strong>\n            </Alert>\n          ) : null}\n        </Stack>\n      </Box>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React from \"react\";\nimport sha256 from \"crypto-js/sha256\";\nimport hmacSHA512 from \"crypto-js/hmac-sha512\";\nimport Base64 from \"crypto-js/enc-base64\";\nimport { Route, Redirect } from \"react-router\";\nimport { accessPinCache } from \"../cache\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const isAutheticated = () => {\n    const hashDigest = sha256(accessPinCache.get());\n    const hmacDigest = Base64.stringify(\n      hmacSHA512(hashDigest, process.env.REACT_APP_PRIVATE_KEY)\n    );\n    if (process.env.REACT_APP_AUTH_TOKEN === hmacDigest) return true;\n    return false;\n  };\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isAutheticated() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import \"./App.css\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Auth from \"./components/Auth\";\nimport PrivateRoute from \"./routes/PrivateRoute\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/auth/:username\" component={Auth} exact />\n        <PrivateRoute path=\"/action/:username\" component={Home} exact />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}